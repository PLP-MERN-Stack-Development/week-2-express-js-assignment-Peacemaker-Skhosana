// In routes/products.js

// GET products with filtering and pagination
router.get('/', asyncHandler(async (req, res) => {
  let result = [...products];
  
  // Filter by category
  if (req.query.category) {
    result = result.filter(p => p.category === req.query.category);
  }
  
  // Search by name
  if (req.query.search) {
    const searchTerm = req.query.search.toLowerCase();
    result = result.filter(p => 
      p.name.toLowerCase().includes(searchTerm) || 
      p.description.toLowerCase().includes(searchTerm)
    );
  }
  
  // Pagination
  const page = parseInt(req.query.page) || 1;
  const limit = parseInt(req.query.limit) || 10;
  const startIndex = (page - 1) * limit;
  const endIndex = page * limit;
  
  const paginatedResults = result.slice(startIndex, endIndex);
  
  res.json({
    total: result.length,
    page,
    limit,
    data: paginatedResults
  });
});

// GET product statistics
router.get('/stats', (req, res) => {
  const stats = {
    totalProducts: products.length,
    categories: {},
    inStock: products.filter(p => p.inStock).length,
    outOfStock: products.filter(p => !p.inStock).length
  };
  
  products.forEach(product => {
    if (!stats.categories[product.category]) {
      stats.categories[product.category] = 0;
    }
    stats.categories[product.category]++;
  });
  
  res.json(stats);
});
